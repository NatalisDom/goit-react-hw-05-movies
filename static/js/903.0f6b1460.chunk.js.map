{"version":3,"file":"static/js/903.0f6b1460.chunk.js","mappings":"sOAEaA,E,OAAOC,GAAAA,GAAH,qd,SCyCjB,EAtCa,WACX,IACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcN,GAAIO,MAAK,SAAAC,GACrBJ,EAAQI,EAAML,KAAKM,MAAM,EAAG,KAC5BC,QAAQC,IAAIH,EAAML,KACnB,GACF,GAAE,CAACH,IACJU,QAAQC,IAAIR,IAGV,8BACGA,IACC,SAACL,EAAD,UACGK,EAAKS,KAAI,YAAkD,IAA/CC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACtC,OACE,2BACE,gBACEC,IACED,EAAY,UArBb,oCAqBa,OACMA,GADN,+DAIdE,IAAI,WAEN,uBAAIJ,KACJ,uCAAeC,OAVRF,EAaZ,OAKV,C,uKCxCKM,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEiBC,EAAAA,EAAAA,IAAA,sCAAyCF,IAF1D,cAEGX,EAFH,yBAIIA,EAAMc,MAJV,gCAMHZ,QAAQC,IAAR,MANG,gFAUA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA8BvB,GAA9B,gGAEiBqB,EAAAA,EAAAA,IAAA,iBACRrB,EADQ,oBACMmB,EADN,oBAFjB,cAEGX,EAFH,yBAKIA,EAAMc,MALV,gCAOHZ,QAAQC,IAAR,MAPG,gFAWA,SAAeL,EAAtB,+CAAO,OAAP,oBAAO,WAA6BN,GAA7B,gGAEiBqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,4BAA0CmB,IAF3D,cAEGX,EAFH,yBAGIA,EAAMc,MAHV,gCAKHZ,QAAQC,IAAR,MALG,gFASA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA0BxB,GAA1B,gGAEoBqB,EAAAA,EAAAA,IAAA,iBACXrB,EADW,4BACWmB,EADX,2BAFpB,cAEGM,EAFH,yBAKIA,EAASH,MALb,gCAOHZ,QAAQC,IAAR,MAPG,gFAhCPU,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/Cast/Cast.stayled.js","components/Cast/Cast.jsx","components/api/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 30px auto 0px auto;\n  padding: 0;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-contect: center;\n\n  li {\n\n    width: 175px;\n    margin-right: 60px;\n    margin-bottom: 30px;\n   \n    text-align: center;\n    box-shadow: 0px 12px 30px 0px rgba(0, 0, 0, 0.65);\n    border-radius: 8px;\n  }\n  }\n  img {\n    width: 100%;\n    display: block;\n    height: 260px;\n  }\n  p {\n    font-size: 28px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastList } from 'components/api/api';\nimport { List } from './Cast.stayled';\n\nconst Cast = () => {\n  const imageUrl = 'https://image.tmdb.org/t/p/w500/';\n  const { id } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchCastList(id).then(reply => {\n      setCast(reply.cast.slice(0, 10));\n      console.log(reply.cast);\n    });\n  }, [id]);\n  console.log(cast);\n\n  return (\n    <>\n      {cast && (\n        <List>\n          {cast.map(({ actor_id, name, character, profile_path }) => {\n            return (\n              <li key={actor_id}>\n                <img\n                  src={\n                    profile_path\n                      ? `${imageUrl}${profile_path}`\n                      : `https://m.media-amazon.com/images/S/sash/9FayPGLPcrscMjU.png`\n                  }\n                  alt=\"actor\"\n                ></img>\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = '3e3ad9f3df7eb6b26866aac5eb47fa16';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrending() {\n  try {\n    const reply = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n    return reply.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieData(id) {\n  try {\n    const reply = await axios.get(\n      `/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return reply.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchCastList(id) {\n  try {\n    const reply = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return reply.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n"],"names":["List","styled","id","useParams","useState","cast","setCast","useEffect","fetchCastList","then","reply","slice","console","log","map","actor_id","name","character","profile_path","src","alt","API_KEY","getTrending","axios","data","fetchMovieData","getReviews","response"],"sourceRoot":""}