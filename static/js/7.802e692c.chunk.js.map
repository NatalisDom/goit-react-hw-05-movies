{"version":3,"file":"static/js/7.802e692c.chunk.js","mappings":"6SAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEiBC,EAAAA,EAAAA,IAAA,sCAAyCF,IAF1D,cAEGG,EAFH,yBAIIA,EAAMC,MAJV,gCAMHC,QAAQC,IAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,gGAEiBN,EAAAA,EAAAA,IAAA,iBACRM,EADQ,oBACMR,EADN,oBAFjB,cAEGG,EAFH,yBAKIA,EAAMC,MALV,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BD,GAA7B,gGAEiBN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA0CR,IAF3D,cAEGG,EAFH,yBAGIA,EAAMC,MAHV,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,gGAEoBN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWR,EADX,2BAFpB,cAEGW,EAFH,yBAKIA,EAASP,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBX,EAAAA,EAAAA,IAAA,gCACIF,EADJ,kBACqBa,IAHzC,cAEGF,EAFH,yBAKIA,EAASP,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFA3CPJ,EAAAA,EAAAA,SAAAA,QAAyB,8B,+GCyDzB,UAxDe,WACb,OAAwBY,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,aACnC,GAA8BP,EAAAA,EAAAA,WAAS,kBAAMM,GAAa,EAAnB,IAAvC,eAAOE,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGACUb,EAAAA,EAAAA,IAAaQ,GADvB,gBACRM,EADQ,EACRA,QACRV,EAAQU,GAFQ,2CAAH,qDAIXN,GACFK,GAEH,GAAE,CAACL,IAEJ,IAAMO,GAAWC,EAAAA,EAAAA,MACjBvB,QAAQC,IAAIqB,GAEZ,IAIME,EAAY,mCAAG,WAAMC,GAAN,iEACnBA,EAAEC,iBACF1B,QAAQC,IAAIc,GACZD,EAAgB,CAAEC,UAAWE,IAHV,2CAAH,sDAMlB,OACE,6BACE,kBAAMU,SAAUH,EAAhB,WACE,kBAAOI,KAAK,OAAOC,MAAOZ,EAASa,SAbrB,SAAAL,GAClBP,EAAWO,EAAEM,OAAOF,MACrB,KAYK,mBAAQD,KAAK,SAAb,wBAEF,yBACGlB,IACEA,EAAKsB,OAAS,GACb,wBACGtB,EAAKuB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAO/B,EAAS,EAATA,GAClB,OACE,yBACE,SAAC,KAAD,CAAMgC,MAAO,CAAEC,KAAMd,GAAYe,GAAE,kBAAalC,GAAhD,SACG+B,KAFI/B,EAMZ,OAGH,uEAKX,C","sources":["components/api/api.jsx","components/pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '3e3ad9f3df7eb6b26866aac5eb47fa16';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function getTrending() {\n  try {\n    const reply = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n    return reply.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieData(id) {\n  try {\n    const reply = await axios.get(\n      `/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return reply.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchCastList(id) {\n  try {\n    const reply = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return reply.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchByQuery(query) {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n","import { fetchByQuery } from 'components/api/api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\n\nconst Movies = () => {\n  const [info, setInfo] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const getSearch = searchParams.get('getSearch');\n  const [request, setRequest] = useState(() => getSearch || '');\n\n  useEffect(() => {\n    const fetchInfo = async () => {\n      const { results } = await fetchByQuery(getSearch);\n      setInfo(results);\n    };\n    if (getSearch) {\n      fetchInfo();\n    }\n  }, [getSearch]);\n\n  const location = useLocation();\n  console.log(location);\n\n  const handleAlter = e => {\n    setRequest(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(getSearch);\n    setSearchParams({ getSearch: request });\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={request} onChange={handleAlter} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <div>\n        {info &&\n          (info.length > 0 ? (\n            <ul>\n              {info.map(({ title, id }) => {\n                return (\n                  <li key={id}>\n                    <Link state={{ from: location }} to={`/movies/${id}`}>\n                      {title}\n                    </Link>\n                  </li>\n                );\n              })}\n            </ul>\n          ) : (\n            <p>No movies with this title ðŸ˜¢</p>\n          ))}\n      </div>\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["API_KEY","getTrending","axios","reply","data","console","log","fetchMovieData","id","fetchCastList","getReviews","response","fetchByQuery","query","useState","info","setInfo","useSearchParams","searchParams","setSearchParams","getSearch","get","request","setRequest","useEffect","fetchInfo","results","location","useLocation","handleSubmit","e","preventDefault","onSubmit","type","value","onChange","target","length","map","title","state","from","to"],"sourceRoot":""}